/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.11.1/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {

    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    //https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java
    testImplementation 'org.seleniumhq.selenium:selenium-java:3.141.59'
    testImplementation 'org.apache.commons:commons-lang3:3.12.0' //agregada por Benja - genera un string aleatorio
    testImplementation 'org.apache.poi:poi-ooxml:4.1.2'
    // https://mvnrepository.com/artifact/org.apache.poi/poi
    testImplementation 'org.apache.poi:poi:4.1.2'
    testImplementation("io.github.bonigarcia:webdrivermanager:5.9.2")
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'org.example.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
